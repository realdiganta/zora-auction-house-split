/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { C } from "../C";

export class C__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<C> {
    return super.deploy(overrides || {}) as Promise<C>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): C {
    return super.attach(address) as C;
  }
  connect(signer: Signer): C__factory {
    return super.connect(signer) as C__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): C {
    return new Contract(address, _abi, signerOrProvider) as C;
  }
}

const _abi = [
  {
    inputs: [],
    name: "sender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060e58061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806350c36a5214603757806367e404ce146067575b600080fd5b6065600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055565b005b60005460869073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f3fea2646970667358221220d37ac5c34fecd62975f406ce750a3f4e906ee82c30a874a3883b03182dd9932e64736f6c63430008040033";
