/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SplitStorage } from "../SplitStorage";

export class SplitStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SplitStorage> {
    return super.deploy(overrides || {}) as Promise<SplitStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SplitStorage {
    return super.attach(address) as SplitStorage;
  }
  connect(signer: Signer): SplitStorage__factory {
    return super.connect(signer) as SplitStorage__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SplitStorage {
    return new Contract(address, _abi, signerOrProvider) as SplitStorage;
  }
}

const _abi = [
  {
    inputs: [],
    name: "currentWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenWindowBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061011b806100206000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c80632eb4a7ab14604b5780638da5cb5b1460665780638f1824021460a9578063ba0bafb41460c6575b600080fd5b605360005481565b6040519081526020015b60405180910390f35b60025460859073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001605d565b605360b436600460ce565b60066020526000908152604090205481565b605360015481565b60006020828403121560de578081fd5b503591905056fea2646970667358221220cf0b4debe5311382ffc5534d44ae2473bb8b1a733f044d176144ecca712b70cb64736f6c63430008040033";
