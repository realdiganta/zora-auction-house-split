/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Splitter } from "../Splitter";

export class Splitter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Splitter> {
    return super.deploy(overrides || {}) as Promise<Splitter>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Splitter {
    return super.attach(address) as Splitter;
  }
  connect(signer: Signer): Splitter__factory {
    return super.connect(signer) as Splitter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Splitter {
    return new Contract(address, _abi, signerOrProvider) as Splitter;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentWindow",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundsAvailable",
        type: "uint256",
      },
    ],
    name: "WindowIncremented",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceForWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "scaledPercentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimForAllWindows",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scaledPercent",
        type: "uint256",
      },
    ],
    name: "scaleAmountByPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "scaledAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b83806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80633f26479e116100765780638ffb5c971161005b5780638ffb5c9714610111578063ba0bafb414610124578063d2ef07951461012d57600080fd5b80633f26479e146100f457806381e580d3146100fe57600080fd5b80631e7df9d3146100a85780632e7ba6ef146100bd5780632eb4a7ab146100d0578063338b1d31146100ec575b600080fd5b6100bb6100b6366004610983565b610150565b005b6100bb6100cb366004610a3e565b610276565b6100d960005481565b6040519081526020015b60405180910390f35b6100bb61040a565b6100d9620f424081565b6100d961010c3660046109fb565b610501565b6100d961011f366004610aa4565b610522565b6100d960015481565b61014061013b366004610a13565b61054d565b60405190151581526020016100e3565b6101988282808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250549250610193915088905087610578565b6105c0565b6101e95760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f660000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000805b60015481101561026357610201818761054d565b6102515761020f818761067d565b6102446004828154811061023357634e487b7160e01b600052603260045260246000fd5b906000526020600020015486610522565b61024e9083610ac5565b91505b8061025b81610b1c565b9150506101ed565b5061026e85826106ce565b505050505050565b84600154116102c75760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f7420636c61696d20666f722061206675747572652077696e646f7760448201526064016101e0565b6102d1858561054d565b156103445760405162461bcd60e51b815260206004820152602860248201527f4163636f756e7420616c726561647920636c61696d656420746865206769766560448201527f6e2077696e646f7700000000000000000000000000000000000000000000000060648201526084016101e0565b61034e858561067d565b6103918282808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250549250610193915088905087610578565b6103dd5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016101e0565b61026e846104056004888154811061023357634e487b7160e01b600052603260045260246000fd5b6106ce565b60006001546000141561041e575047610423565b506006545b6000600655806104755760405162461bcd60e51b815260206004820152601e60248201527f4e6f206164646974696f6e616c2066756e647320666f722077696e646f77000060448201526064016101e0565b600480546001818101835560009283527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9091018390558054909182916104bd908390610ac5565b909155505060015460408051918252602082018390527ff0840b82b46c1dc7df62cae652baa1b5588ce37b6a1236ed1dcf4caf34d738ac910160405180910390a150565b6004818154811061051157600080fd5b600091825260209091200154905081565b6000610532620f42406064610afd565b61053c8385610afd565b6105469190610add565b9392505050565b60006005600061055d8585610870565b815260208101919091526040016000205460ff169392505050565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290526000906054015b60405160208183030381529060405280519060200120905092915050565b600081815b85518110156106725760008682815181106105f057634e487b7160e01b600052603260045260246000fd5b6020026020010151905080831161063257604080516020810185905290810182905260600160405160208183030381529060405280519060200120925061065f565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061066a81610b1c565b9150506105c5565b509092149392505050565b60016005600061068d8585610870565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790555050565b60006106da83836108a0565b90508061081357600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561074b57600080fd5b505af115801561075f573d6000803e3d6000fd5b50506002546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff888116600483015260248201889052909116935063a9059cbb92506044019050602060405180830381600087803b1580156107d957600080fd5b505af11580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081191906109db565b505b6040805173ffffffffffffffffffffffffffffffffffffffff85168152602081018490528215158183015290517fdbd5389f52533f4cbd998e752125a5a4eaa0b813b399ad15f775ec0e8438620d9181900360600190a192915050565b600082826040516020016105a292919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6000808373ffffffffffffffffffffffffffffffffffffffff168361753090604051600060405180830381858888f193505050503d8060008114610900576040519150601f19603f3d011682016040523d82523d6000602084013e610905565b606091505b509095945050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461093457600080fd5b919050565b60008083601f84011261094a578182fd5b50813567ffffffffffffffff811115610961578182fd5b6020830191508360208260051b850101111561097c57600080fd5b9250929050565b60008060008060608587031215610998578384fd5b6109a185610910565b935060208501359250604085013567ffffffffffffffff8111156109c3578283fd5b6109cf87828801610939565b95989497509550505050565b6000602082840312156109ec578081fd5b81518015158114610546578182fd5b600060208284031215610a0c578081fd5b5035919050565b60008060408385031215610a25578182fd5b82359150610a3560208401610910565b90509250929050565b600080600080600060808688031215610a55578081fd5b85359450610a6560208701610910565b935060408601359250606086013567ffffffffffffffff811115610a87578182fd5b610a9388828901610939565b969995985093965092949392505050565b60008060408385031215610ab6578182fd5b50508035926020909101359150565b60008219821115610ad857610ad8610b37565b500190565b600082610af857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610b1757610b17610b37565b500290565b6000600019821415610b3057610b30610b37565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122001ceccc380fc49c99322ed5a11e1b616de969ae8288f9ce13720d329363a6af564736f6c63430008040033";
