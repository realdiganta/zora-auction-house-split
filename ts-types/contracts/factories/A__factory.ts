/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { A } from "../A";

export class A__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<A> {
    return super.deploy(overrides || {}) as Promise<A>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): A {
    return super.attach(address) as A;
  }
  connect(signer: Signer): A__factory {
    return super.connect(signer) as A__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): A {
    return new Contract(address, _abi, signerOrProvider) as A;
  }
}

const _abi = [
  {
    inputs: [],
    name: "c",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "num",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_num",
        type: "uint256",
      },
    ],
    name: "setVars",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610290806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634e70b1dc1461005157806367e404ce1461006d578063c3da42b8146100b2578063d1e0f308146100d2575b600080fd5b61005a60005481565b6040519081526020015b60405180910390f35b60015461008d9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610064565b60025461008d9073ffffffffffffffffffffffffffffffffffffffff1681565b6100e56100e03660046101de565b6100e7565b005b6000808373ffffffffffffffffffffffffffffffffffffffff168360405160240161011491815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f6466414b00000000000000000000000000000000000000000000000000000000179052516101959190610221565b600060405180830381855af49150503d80600081146101d0576040519150601f19603f3d011682016040523d82523d6000602084013e6101d5565b606091505b50505050505050565b600080604083850312156101f0578182fd5b823573ffffffffffffffffffffffffffffffffffffffff81168114610213578283fd5b946020939093013593505050565b60008251815b818110156102415760208186018101518583015201610227565b8181111561024f5782828501525b50919091019291505056fea2646970667358221220477060d001ee910a65f303762b40d76810c27d7d6cee15a28407ac969687136f64736f6c63430008040033";
